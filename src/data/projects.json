[
    {
        "title": "StatHelp",
        "description": "- An application for calculating statistical estimators such as Probability Distributions and Central Tendency # - Implemented a reliable and accurate plotting system for graphs such as box plots, scatter plots, and pie charts# - Developed Algorithms to calculate Probability Distributions such as Binomial, Chi-Squared, Exponential, etc# - Optimized NodeJS server by caching distribution algorithms results and conducting unit testing with Jest",
        "link": "https://stathelpweb.netlify.app/",
        "github": "https://github.com/parthahuja89/stathelp",
        "tech": "React, React-Native, Express/NodeJS, Jest"  
    },
    {
        "title": "MW-M31",
        "description": "- A visualization of the MW/M31 galaxy from the IllustrisTNG project.# - Performed mesh sampling and conversion from 5 Million to 100,000 points whilst mantaining data integrity.# - Visualized integral attributes such as energy and velocity by calculating vector transformations using NumPy. # - Optimized the PyQt5 GUI by using multithreading and caching data for faster rendering.",
        "link": "N/A",
        "github": "https://github.com/parthahuja89/mw-m31-vtk",
        "tech": "Python, VTK, NumPy, h5py"
    },
    {
        "title": "WiseOwl",
        "description": "- Machine learning based image classification application that compares Pre-Trained and Re-Trained models.# - Machine learning based image classification application that compares Pre-Trained and Re-Trained model# - Retrained the Inception-V3 model using Google’s retraining scripts on a limited dataset (20 images) of Eagles and Owls for comparison with the fully trained model# - Optimized user images for Pre-Trained ‘ResNet-50’ Model and published its prediction results on a Flask server",
        "link": "N/A",
        "github": "https://github.com/parthahuja89/wiseowl",
        "tech": "Python, Matplotlib, TensorFlow, Electron"   
    }
]